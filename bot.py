import os
import logging
import telebot
from flask import Flask, request, abort
from auto_fetch import fetch_new_p2e

logging.basicConfig(level=logging.INFO)
log = logging.getLogger("p2e-bot")

# ------------------- Environment -------------------
BOT_TOKEN = os.getenv("BOT_TOKEN")
WEBHOOK_URL = os.getenv("WEBHOOK_URL")
WEBHOOK_PATH = os.getenv("WEBHOOK_PATH")

if not BOT_TOKEN or not WEBHOOK_URL or not WEBHOOK_PATH:
    raise ValueError("–ù–µ –∑–∞–¥–∞–Ω—ã BOT_TOKEN, WEBHOOK_URL –∏–ª–∏ WEBHOOK_PATH –≤ Render Environment")

WEBHOOK_URL = WEBHOOK_URL.rstrip('/')
WEBHOOK_ENDPOINT = f"/webhook/{WEBHOOK_PATH}"
FULL_WEBHOOK_URL = f"{WEBHOOK_URL}{WEBHOOK_ENDPOINT}"

bot = telebot.TeleBot(BOT_TOKEN)
app = Flask(__name__)

# ------------------- –°—Ç–∞—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã -------------------
@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    log.info(f"/start –∏–ª–∏ /help –≤—ã–∑–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {message.chat.id}")
    bot.reply_to(message,
                 "üëã –ü—Ä–∏–≤–µ—Ç! –Ø P2E/NFT –±–æ—Ç.\n\n"
                 "–ö–æ–º–∞–Ω–¥—ã:\n"
                 "/info ‚Äî –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ\n"
                 "/airdrops ‚Äî –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ airdrops\n"
                 "/autogames ‚Äî —Å–≤–µ–∂–∏–µ P2E –ø—Ä–æ–µ–∫—Ç—ã")

@bot.message_handler(commands=['info'])
def info_cmd(message):
    log.info(f"/info –≤—ã–∑–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {message.chat.id}")
    bot.reply_to(message,
                 "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:\n"
                 "- –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç P2E –∏ NFT –ø—Ä–æ–µ–∫—Ç—ã\n"
                 "- –ò—Å–ø–æ–ª—å–∑—É–π /autogames –¥–ª—è –Ω–æ–≤—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤\n"
                 "- –ò—Å–ø–æ–ª—å–∑—É–π /airdrops –¥–ª—è airdrops")

@bot.message_handler(commands=['airdrops'])
def airdrops_cmd(message):
    log.info(f"/airdrops –≤—ã–∑–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {message.chat.id}")
    bot.reply_to(message,
                 "üéÅ –ó–¥–µ—Å—å –±—É–¥—É—Ç airdrops P2E –ø—Ä–æ–µ–∫—Ç–æ–≤ (–ø—Ä–∏–º–µ—Ä)")

# ------------------- –ù–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞: –∞–≤—Ç–æ–ø–æ–∏—Å–∫ -------------------
@bot.message_handler(commands=['autogames'])
def autogames_cmd(message):
    log.info(f"/autogames –≤—ã–∑–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {message.chat.id}")
    bot.send_chat_action(message.chat.id, 'typing')
    games = fetch_new_p2e(limit=5)
    if not games:
        bot.reply_to(message, "üòï –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–µ –ø—Ä–æ–µ–∫—Ç—ã.")
        return
    text = "üéØ *–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ P2E-–ø—Ä–æ–µ–∫—Ç–æ–≤:*\n\n"
    for g in games:
        text += f"üéÆ *{g['name']}*\nüóÇ {g['genre']}\nüîó {g['link']}\n\n"
    bot.send_message(message.chat.id, text, parse_mode="Markdown")

# ------------------- Flask webhook -------------------
@app.route(WEBHOOK_ENDPOINT, methods=['POST'])
def webhook_handler():
    if request.headers.get('content-type') != 'application/json':
        return abort(400)
    update = telebot.types.Update.de_json(request.get_data().decode('utf-8'))
    bot.process_new_updates([update])
    return '', 200

# ------------------- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook -------------------
def set_webhook():
    bot.remove_webhook()
    bot.set_webhook(url=FULL_WEBHOOK_URL)
    log.info(f"Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {FULL_WEBHOOK_URL}")

# ------------------- –ó–∞–ø—É—Å–∫ Flask -------------------
if __name__ == '__main__':
    port = int(os.environ.get("PORT", 10000))
    set_webhook()
    app.run(host="0.0.0.0", port=port)
